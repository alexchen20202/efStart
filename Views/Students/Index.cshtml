@model efStart3.Models.SchoolViewModels.StudentIndexData    

@{
    ViewData["Title"] = "Index";
}

@{
    var nextPage = (Model.PagedList.HasNextPage) ? (Model.PagedList.PageIndex + 1) : Model.PagedList.PageIndex;
    var prevPage = (Model.PagedList.HasPrevPage) ? (Model.PagedList.PageIndex - 1) : Model.PagedList.PageIndex;
    var nextDisable = (Model.PagedList.HasNextPage) ? "" : "disabled";
    var prevDisable = (Model.PagedList.HasPrevPage) ? "" : "disabled";
}

<form asp-action="Index" method="get" class="form">
    <div class = "form-row">
      <div class="form-group col-md-3">
        <h4>Student Index</h4>
      </div>
      <div class="form-group col-md-5">
      </div>
      <div class="form-group col-md-4">         
        <input type="text" placeholder="Search" value="@ViewBag.SearchString" name="searchString"/>
        <input type="submit" value="Search" class="btn btn-primary btn-sm" />
      </div>     
    </div>     
</form>
<p>Page @Model.PagedList.PageIndex of @Model.PagedList.TotalPages</p>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortLastName">
                    @Html.DisplayNameFor(model => model.PagedList.Data.FirstOrDefault().FullName)  
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortID">
                    @Html.DisplayNameFor(model => model.PagedList.Data.FirstOrDefault().StudentId)                    
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortEnrollDate">
                    @Html.DisplayNameFor(model => model.PagedList.Data.FirstOrDefault().EnrollmentDate)
                </a>
            </th>
            <th>
                <a asp-action="Create">New Student </a>
            </th>
           </tr>
    </thead>
    <tbody>
@foreach (Student item in Model.PagedList.Data) {
        var selectedRow = "";      
        if (item.StudentId == (int?)ViewData["StudentId"])
        {
            selectedRow = "table-success";
        }
        <tr class="@selectedRow">
            <td>
                @item.FullName
            </td>
            <td>
                @item.StudentId
            </td>
            <td>
                @item.EnrollmentDate
            </td>
            <td>
                <a 
                asp-action="Index" 
                asp-route-StudentID="@item.StudentId" 
                asp-route-searchString = "@ViewBag.SearchString"
                asp-route-pageIndex = "@ViewBag.PageIndex">Select</a> |
                <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<p>
<a asp-action = "Index" 
    asp-route-sortString = "@ViewBag.SortString"
    asp-route-searchString = "@ViewBag.SearchString"
    asp-route-pageIndex="@prevPage"
    class = "btn btn-success btn-sm @prevDisable"
    >
<< Prev |    
</a>

<a  asp-action = "Index" 
    asp-route-sortString = "@ViewBag.SortString"
    asp-route-searchString = "@ViewBag.SearchString"
    asp-route-pageIndex="@nextPage"
    class = "btn btn-success btn-sm @nextDisable"
    >
| Next >>    
</a>

</p>

@if (Model.Courses != null)
{
    <h5>
        Courses Enrollmented by Student : 
        @Html.DisplayFor(StudentID => 
            Model.PagedList.Data.Where(
                i => i.StudentId.ToString() == 
                ViewData["StudentId"].ToString()
            ).Single().FullName)
    </h5>
    <br>
    <table class="table table-striped">
        <tr>            
            <th>CourseID</th>
            <th>Title</th>
            <th>Department</th>
            <th></th>
        </tr>

        @foreach (var item in Model.Courses)
        {
            var selectedRow = "";
            if (item.CourseID == (int?)ViewData["CourseID"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">                
                <td>
                    @item.CourseID
                </td>
                <td>
                    @item.Title
                </td>
                <td>
                    @item.Department.Name
                </td>
                <td>
                    <a  asp-action="Index"
                        asp-route-pageIndex = "@ViewBag.PageIndex" 
                        asp-route-CourseID = "@item.CourseID"
                        asp-route-StudentID="@ViewData["StudentID"]" 
                        asp-route-searchString = "@ViewBag.SearchString">
                        Select
                    </a>    
                </td>
            </tr>
        }

    </table>
    <hr><br>
}


@if (Model.CourseAssignments != null)
{
    <h5>
        Instructors Assigned in Course : 
        @Html.DisplayFor(courseID => 
        Model.CourseAssignments.FirstOrDefault().CourseID)
    </h5>
    <br>
    <table class="table table-striped">
        <tr>
            <th>Name</th>
        </tr>
        @foreach (var item in Model.CourseAssignments)
        {
            <tr>
                <td>
                    @item.Instructor.FullName
                </td>
            </tr>
        }
    </table>
    <hr><br>
}


