@model efStart3.Services.PagedList<Student>
  
@{
    ViewData["Title"] = "Index";
}

@{
    var nextPage = (Model.HasNextPage) ? (Model.PageIndex + 1) : Model.PageIndex;
    var prevPage = (Model.HasPrevPage) ? (Model.PageIndex - 1) : Model.PageIndex;
    var nextDisable = (Model.HasNextPage) ? "" : "disabled";
    var prevDisable = (Model.HasPrevPage) ? "" : "disabled";
}

<form asp-action="Index" method="get" class="form">
    <div class = "form-row">
      <div class="form-group col-md-3">
        <h3>Student Index</h3>
      </div>
      <div class="form-group col-md-5">
      </div>
      <div class="form-group col-md-4">         
        <input type="text" placeholder="Search" value="@ViewBag.SearchString" name="searchString"/>
        <input type="submit" value="Search" class="btn btn-primary btn-sm" />
      </div>     
    </div>     
</form>
<p>Page @Model.PageIndex of @Model.TotalPages</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortFirstName">
                    @Html.DisplayNameFor(model => model.Data.FirstOrDefault().FirstName)  
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortLastName">
                    @Html.DisplayNameFor(model => model.Data.FirstOrDefault().LastName)                    
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortString="@ViewBag.SortEnrollDate">
                    @Html.DisplayNameFor(model => model.Data.FirstOrDefault().EnrollmentDate)
                </a>
            </th>
            <th>
                <a asp-action="Create">New Student </a>
            </th>
           </tr>
    </thead>
    <tbody>
@foreach (Student item in Model.Data) {
        <tr>
            <td>
                @* @Html.DisplayFor(modleItem => item.Data.FirstOrDefault().FirstName) *@
                @item.FirstName
            </td>
            <td>
                @* @Html.DisplayFor(item => item.Data.FirstOrDefault().LastName) *@
                @item.LastName
            </td>
            <td>
                @* @Html.DisplayFor(item => item.Data.FirstOrDefault().EnrollmentDate) *@
                @item.EnrollmentDate
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<p>
<a asp-action = "Index" 
    asp-route-sortString = "@ViewBag.SortString"
    asp-route-searchString = "@ViewBag.SearchString"
    asp-route-page="@prevPage"
    class = "btn btn-success btn-sm @prevDisable"
    >
<< Prev |    
</a>

<a  asp-action = "Index" 
    asp-route-sortString = "@ViewBag.SortString"
    asp-route-searchString = "@ViewBag.SearchString"
    asp-route-page="@nextPage"
    class = "btn btn-success btn-sm @nextDisable"
    >
| Next >>    
</a>

</p>

