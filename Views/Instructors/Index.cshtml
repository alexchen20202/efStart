@* @model IEnumerable<efStart3.Models.Instructor> *@
@model efStart3.Models.SchoolViewModels.InstructorIndexData    

@{
    ViewData["Title"] = "Instructors";
}


<style>
    .modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  background-color: White;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
}

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}
</style>


<h4>Instructor Index</h4>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                
                Full Name
            </th>
            <th>
                Office
            </th>
            <th>
                Course
            </th>
            <th>
                <a asp-action="Create">Create New</a>
            </th>
        </tr>
    </thead>
    <tbody>
        
@foreach (var item in Model.Instructors) {
        var selectedRow = "";      
        if (item.InstructorID == (int?)ViewData["InstructorID"])
        {
            selectedRow = "table-success";
        }
        <tr class="@selectedRow">
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @if (item.OfficeAssignment != null)
                {
                    @Html.DisplayFor(modelItem => item.OfficeAssignment.Location);
                }
            </td>
            <td>
                @if (item.CourseAssignments != null)
                {
                    foreach( var course in item.CourseAssignments)
                    {   
                        <p> Course Code: @Html.DisplayFor(cID => course.Course.CourseID)</p>
                        <p> Course Title: @Html.DisplayFor(cTitle => course.Course.Title)</p>
                    }
                }
            </td>
            <td>
                <a asp-action="Index"  onclick="selectInstructor()" asp-route-InstructorID="@item.InstructorID">Select</a> |
                <a asp-action="Edit" asp-route-id="@item.InstructorID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.InstructorID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.InstructorID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<hr><br>

@if (Model.Courses != null)
{
    <h5>
        Courses Taught by Instructor : 
        @Html.DisplayFor(instructorID => 
            Model.Instructors.Where(
                i => i.InstructorID.ToString() == 
                ViewData["InstructorID"].ToString()
            ).Single().FullName)
    </h5>
    <br>
    <table class="table table-striped">
        <tr>            
            <th>Number</th>
            <th>Title</th>
            <th>Department</th>
            <th></th>
        </tr>

        @foreach (var item in Model.Courses)
        {
            var selectedRow = "";
            if (item.CourseID == (int?)ViewData["CourseID"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">                
                <td>
                    @item.CourseID
                </td>
                <td>
                    @item.Title
                </td>
                <td>
                    @item.Department.Name
                </td>
                <td>
                    @Html.ActionLink("Select", "Index", 
                    new { CourseID = item.CourseID, InstructorID = ViewData["InstructorID"]})
                </td>
            </tr>
        }

    </table>
    <hr><br>
}


@if (Model.Enrollments != null)
{
    <h5>
        Students Enrolled in Course : 
        @Html.DisplayFor(courseID => 
        Model.Enrollments.FirstOrDefault().CourseID)
    </h5>
    <br>
    <table class="table table-striped">
        <tr>
            <th>Name</th>
            <th>Grade</th>
        </tr>
        @foreach (var item in Model.Enrollments)
        {
            <tr>
                <td>
                    @item.Student.FullName
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
            </tr>
        }
    </table>
    <hr><br>
}
